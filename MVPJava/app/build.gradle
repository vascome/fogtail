apply plugin: 'com.android.application'
apply plugin: 'hu.supercluster.paperwork'
apply from: '../code_quality_tools/jacoco.gradle'
apply from: '../code_quality_tools/quality.gradle'
apply plugin: 'com.github.ben-manes.versions'

paperwork {
    set = [
            gitSha   : gitSha(),
            buildDate: buildTime("dd-MM-yyyy HH:00:00 z", "UTC"),
    ]
}

android {
    // Declared in dependencies.gradle in the root of the project.
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        applicationId "com.vascome.fogtail"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode versions.code
        versionName versions.name

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        // Make generated apks contain version name and code.
        archivesBaseName = "app-${versions.name}-${versions.code}"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }

    signingConfigs {
        fogtail {
            storeFile rootProject.file('keystore/keystore.jks')
            storePassword 'keystore'
            keyAlias 'fogtail'
            keyPassword 'keystore'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.fogtail
            applicationIdSuffix '.debug'

            // Enables code coverage with Jacoco only for instrumentation tests.
            // Coverage for JVM tests done by code_quality_tools/jacoco.gradle.
            testCoverageEnabled true
        }

        release {
            signingConfig signingConfigs.fogtail
            minifyEnabled true
            proguardFiles file('../proguard').listFiles().toList().toArray()
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // Enables code coverage with Jacoco only for instrumentation tests.
            // Coverage for JVM tests done by code_quality_tools/jacoco.gradle.
            testCoverageEnabled true
        }
    }

    sourceSets {
        // Unit tests live in src/unitTest.
        //test.java.srcDir 'src/unitTests/java'

        // Integration tests live in src/integrationTest.
        //test.java.srcDir 'src/integrationTests/java'

        // Unit tests for debug build type specific code live in src/debugUnitTest.
        //testDebug.java.srcDir 'src/debugUnitTests/java'

        // Unit tests for release build type specific code live in src/releaseUnitTest.
        //testRelease.java.srcDir 'src/releaseUnitTests/java'

        // Functional tests live in src/functionalTests.
        //androidTest.java.srcDir 'src/functionalTests/java'
    }

    lintOptions {
        warningsAsErrors true
        abortOnError true // Fail early.

        disable 'GoogleAppIndexingWarning' // App does not have deep linking.
        disable 'InvalidPackage' // Okio references java.nio that does not presented in Android SDK.
    }

    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    // This allows us see tests execution progress in the output on the CI.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            exceptionFormat 'full'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation libraries.dagger
    annotationProcessor libraries.daggerCompiler

    implementation libraries.picasso
    implementation libraries.picassoOkHttpDownloader

    implementation libraries.okHttp

    implementation libraries.retrofit
    implementation libraries.retrofitGsonConverter
    implementation libraries.gson

    implementation libraries.timber

    annotationProcessor libraries.autoValue
    annotationProcessor libraries.autoValueGson

    // Make AutoValue annotation visible to the compiler.
    compileOnly libraries.autoValue
    compileOnly libraries.autoValueGson

    implementation libraries.supportAppCompat
    implementation libraries.firebaseCore

    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation libraries.junit
    androidTestImplementation libraries.supportTestRunner
    androidTestImplementation libraries.espressoCore

    // Developer tools (Developer Settings)
    debugImplementation libraries.okHttpLoggingInterceptor
    /*debugImplementation libraries.stetho
    debugImplementation libraries.stethoOkHttp
    debugImplementation libraries.leakCanary
    debugImplementation libraries.tinyDancer
    debugImplementation libraries.paperwork
    debugImplementation libraries.lynx
    debugImplementation libraries.processPhoenix
    */
}


configurations.all {
    resolutionStrategy {
        // Force our version of support-annotations, we have a conflict between app and androidTest dependency resolution.
        force libraries.supportAnnotations
    }
}

apply plugin: 'com.google.gms.google-services'

